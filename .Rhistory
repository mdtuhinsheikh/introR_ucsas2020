knitr::opts_chunk$set(echo = TRUE)
JMtheta <- read.table("JMtheta.txt", header = FALSE)
head(JMtheta)
colnames(JMtheta) <- c("i", "theta_1", "theta_2")
head(JMtheta)
JMgam <- read.table("JMgam.txt", header = FALSE)
colnames(JMtheta) <- c("i", "gam_1", "gam_2", "gam_3",
"gam_4", "gam_5", "gam_6", "gam_7")
head(JMgam)
View(JMtheta)
colnames(JMgam) <- c("i", "gam_1", "gam_2", "gam_3",
"gam_4", "gam_5", "gam_6", "gam_7")
JMOmega <- read.table("JMOmega.txt", header = FALSE)
colnames(JMOmega) <- c("i", "Omega_11", "Omega_12", "Omega_21",
"Omega_22")
colnames(JMalpha1) <- c("i", "alpha_11", "alpha_12")
JMalpha1 <- read.table("JMalpha1.txt", header = FALSE)
colnames(JMalpha1) <- c("i", "alpha_11", "alpha_12")
JMalpha2 <- read.table("JMalpha2.txt", header = FALSE)
colnames(JMalpha2) <- c("i", "alpha_21", "alpha_22")
JMbeta1 <- read.table("JMbeta1.txt", header = FALSE)
colnames(JMbeta1) <- c("i", "beta_11", "beta_12", "beta_13", )
colnames(JMbeta1) <- c("i", "beta_11", "beta_12", "beta_13",
"beta_14", "beta_15", "beta_16", "beta_17")
JMbeta2 <- read.table("JMbeta2.txt", header = FALSE)
colnames(JMbeta2) <- c("i", "beta_21", "beta_22", "beta_23",
"beta_24", "beta_25", "beta_26", "beta_27")
JMalam <- read.table("JMlam.txt", header=FALSE)
install.packages("boa")
library(boa)
?boa.acf
boa.acf(JMgam, lags = 20)
boa.acf(JMgam, lags = 1:20)
boa.acf(JMgam[-1, ], lags = 1:20)
t(boa.acf(JMgam[-1, ], lags = 1:20))
t(boa.acf(JMgam[, -1], lags = 1:20))
t(boa.acf(JMgam[, -1], lags = 1:30))
t(boa.acf(JMgam[, -1], lags = 1:100))
t(boa.acf(JMsig2[, -1], lags = 1:20))
JMsig2 <- read.table("JMsig2.txt", header = FALSE)
colnames(JMsig2) <- c("i", "sig2")
t(boa.acf(JMsig2[, -1], lags = 1:20))
t(boa.acf(JMsig2[, ], lags = 1:20))
t(boa.acf(JMsig2[, -1], lags = 1:20))
t(boa.acf(JMsig2, lags = 1:20))
t(boa.acf(JMsig2, lags = 1:20))[, 2]
JMOmega <- read.table("JMOmega.txt", header = FALSE)
colnames(JMOmega) <- c("i", "Omega_11", "Omega_12", "Omega_21",
"Omega_22")
t(boa.acf(JMOmega[, -1], lags = 1:20))
JMtheta <- read.table("JMtheta.txt", header = FALSE)
colnames(JMtheta) <- c("i", "theta_1", "theta_2")
t(boa.acf(JMOmega, lags = 1:20))
t(boa.acf(JMOmega[, -1], lags = 1:20))
t(boa.acf(JMtheta, lags = 1:20))[, -1]
JMthetaR1 <- read.table("JMthetaR1.txt", header=FALSE)
colnames(JMthetaR1) <- c("iter", "thetaR1_1", "thetaR1_2")
t(boa.acf(JMthetaR1, lags = 1:20))[, -1]
JMthetaRmid <- read.table("JMthetaRmid.txt", header=FALSE)
colnames(JMthetaRmid) <- c("iter", "thetaRmid_1", "thetaRmid_2")
t(boa.acf(JMthetaRmid, lags = 1:20))[, -1]
JMalpha1 <- read.table("JMalpha1.txt", header = FALSE)
colnames(JMalpha1) <- c("iter", "alpha_11", "alpha_12")
t(boa.acf(JMalpha1, lags = 1:20))[, -1]
JMalpha2 <- read.table("JMalpha2.txt", header = FALSE)
colnames(JMalpha2) <- c("iter", "alpha_21", "alpha_22")
t(boa.acf(JMalpha2, lags = 1:20))[, -1]
JMbeta1 <- read.table("JMbeta1.txt", header = FALSE)
colnames(JMbeta1) <- c("iter", "beta_11", "beta_12", "beta_13",
"beta_14", "beta_15", "beta_16", "beta_17")
t(boa.acf(JMbeta1, lags = 1:20))[, -1]
JMbeta2 <- read.table("JMbeta2.txt", header = FALSE)
colnames(JMbeta2) <- c("iter", "beta_21", "beta_22", "beta_23",
"beta_24", "beta_25", "beta_26", "beta_27")
t(boa.acf(JMbeta2, lags = 1:20))[, -1]
JMalam <- read.table("JMlam.txt", header=FALSE)
colnames(JMalam)<- c("iter", "lam_1", "lam_2")
t(boa.acf(JMalam, lags = 1:20))[, -1]
head(JMalam)
boa.plot.acf(lname = "JMbeta2")
boa.plot.acf(lname = "JMbeta2", pname = "beta_21")
boa.acf.beta2 <- boa.acf(JMbeta2, lags = 1:20)
boa.plot.acf(boa.acf.beta2)
boa.plot.acf(boa.acf.beta2, "beta22")
boa.hpd(x = JMalpha1[, 2], alpha = 0.05)
boa.hpd(x = JMalpha1[, -1], alpha = 0.05)
boa.hpd(x = JMalpha1[1, 2], alpha = 0.05)
boa.hpd(x = JMalpha1[, 2:8], alpha = 0.05)
mean(JMgam[, 2])
mean(JMgam[, 3])
mean(JMalpha1[, 2])
colnames(JMgam)[-1]
boa.hpd(JMgam[, 1])
boa.hpd(JMgam[, 1], alpha = 0.05)
boa.hpd(JMgam[, 2], alpha = 0.05)
boa.hpd(JMgam[, 2], alpha = 0.05)[1]
for(i in 2:(ncol(JMgam))){
estim[i-1] <- mean(JMgam[, i])
lower[i-1] <- boa.hpd(JMgam[, i], alpha = 0.05)[1]
upper[i-1] <- boa.hpd(JMgam[, i], alpha = 0.05)[2]
}
estim <- lower <- upper <- NULL
for(i in 2:(ncol(JMgam))){
estim[i-1] <- mean(JMgam[, i])
lower[i-1] <- boa.hpd(JMgam[, i], alpha = 0.05)[1]
upper[i-1] <- boa.hpd(JMgam[, i], alpha = 0.05)[2]
}
param <- colnames(JMgam)[-1]
cbind(param, estim, lower, upper)
estim[i-1] <- as.numeric(mean(JMgam[, i]))
estim <- lower <- upper <- NULL
for(i in 2:(ncol(JMgam))){
estim[i-1] <- as.numeric(mean(JMgam[, i]))
lower[i-1] <- as.numeric(boa.hpd(JMgam[, i], alpha = 0.05))[1]
upper[i-1] <- as.numeric(boa.hpd(JMgam[, i], alpha = 0.05))[2]
}
param <- colnames(JMgam)[-1]
cbind(param, estim, lower, upper)
lower
plot(param, estim)
plot(1:7, estim)
plot(1:7, estim, type="o")
plot(1:(length(param)), estim, type="o")
str(param)
param <- as.factor(colnames(JMgam)[-1])
plot(param, estim, type="o")
plot(param, estim, type="l")
plot(estim ~ factor(param), df, las=2, xaxt = "n")
plot(estim ~ factor(param), las=2, xaxt = "n")
require(plotrix)
plotCI(param, estim, ui=lower, li=upper)
library(plotrix)
install.packages("plotrix")
library(plotrix)
plotCI(param, estim, ui=lower, li=upper)
plotCI(1:7, estim, ui=lower, li=upper)
x <- 1:10
F <- runif(10,1,2)
L <- runif(10,0,1)
U <- runif(10,2,3)
require(plotrix)
plotCI(x, F, ui=U, li=L)
F
L
U
lower
upper
estim
x
plotCI(1:7, estim, ui=lower, li=upper)
x <- 1:10
F <- runif(10,1,2)
L <- runif(10,0,1)
U <- runif(10,2,3)
plotCI(x, F, ui=U, li=L)
x <- 1:7
F <- estim
L <- lower
U <- upper
plotCI(x, F, ui=U, li=L)
plotCI(1:7, estim, ui=lower, li=upper)
plotCI(x, estim, ui=lower, li=upper)
plotCI(x, y = F, ui=lower, li=upper)
plotCI(x, y = F, ui=L, li=upper)
plotCI(x, y = F, ui=L, li=L)
plotCI(x, y = F, ui=U, li=L)
plotCI(x, y = F, ui=upper, li=lower)
plotCI(x, y = estim, ui=upper, li=lower)
abline(x=0)
plotCI(x, y = estim, ui=upper, li=lower)
abline(x=0)
plotCI(x, y = estim, ui=upper, li=lower)
boa.menu
boa.menu()
data("line")
head(line)
head(line1)
head(line12)
head(line2)
boa.menu()
install.packages("randomForestSRC")
library(randomForestSRC)
?get.cindex
get.cindex()
get.cindex
1871+148
install.packages("Lahman"}
install.packages("Lahman")
library(Lahman)
data(package="Lahman")
Batting[, 1:4]
install.packages("Lahman")
library("Lahman")
Batting[, 1:4]
head(Batting[, 1:4])
Batting$CS
Batting$SO
knitr::opts_chunk$set(echo = FALSE)
Batting$CS_SO <- Batting$CS + Batting$SO
head(Batting[, c("CS", "SO", "CS_SO")])
head(Batting[, c("CS", "SO", "CS_SO")])
summary(Batting)
data("Salaries")
head(Salaries)
Batting_1872 <- batting[batting$yearID == "1872", ]
apply(Batting, 2, function(x) {length(unique(x))})
salaries <- Salaries %>%
select(playerID, yearID, teamID, salary)
install.packages("dplyr")
library(dplyr)
install.packages("Lahman")
install.packages("Lahman")
install.packages("Lahman")
knitr::opts_chunk$set(echo = FALSE)
library(Lahman)
library(Lahman)
salaries <- Salaries %>%
select(playerID, yearID, teamID, salary)
install.packages("dplyr")
library(dplyr)
data("Salaries", package = "Lahman")
head(Salaries)
salaries <- Salaries %>%
select(playerID, yearID, teamID, salary)
head(salaries)
head(salaries)
batting <- left_join(Batting, salaries,
by =c("playerID", "yearID", "teamID"))
head(batting)
batting$salary
Salaries$salary
names(Batting)
names(salaries)
batting <- left_join(Batting, salaries,
by =c("playerID", "yearID", "teamID"))
batting$salary
summary(Batting$sa)
summary(batting$salary)
head(batting)
batting <- batting %>% arrange(playerID, yearID, stint)
head(batting)
library(Lahman)
data("Batting")
str(Batting)
summary(Batting$BB)
knitr::opts_chunk$set(echo = FALSE)
salaries <- Salaries %>%
select(playerID, yearID, teamID, salary)
library(dplyr)
salaries <- Salaries %>%
select(playerID, yearID, teamID, salary)
batting <- left_join(Batting, salaries,
by =c("playerID", "yearID", "teamID"))
eligibleHitters <- batting %>%
filter(yearID >= 1900 & BB > 20)
goodPlayers <- eligibleHitters %>%
arrange(desc(BB))
goodPlayers
